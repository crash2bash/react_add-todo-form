{"version":3,"sources":["api/todos.js","api/users.js","components/NewTodo.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["todos","userId","id","title","completed","users","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","NewTodo","state","error","validateForm","evt","preventDefault","length","newTask","props","addTodo","setState","handleStatusTodo","handleChangeOnInput","target","value","trim","handleChangeOnSelect","this","className","onSubmit","htmlFor","placeholder","onChange","type","checked","onClick","map","user","key","React","Component","Todo","item","TodoList","todo","App","todosFromServer","usersFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f433349.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    title: '',\n    userId: 0,\n    completed: false,\n    error: false,\n  }\n\n  validateForm = (evt) => {\n    evt.preventDefault();\n\n    const { title, userId, completed } = this.state;\n\n    if (title.length > 0 && userId > 0) {\n      const newTask = {\n        title,\n        userId,\n        completed,\n      };\n\n      this.props.addTodo(newTask);\n\n      this.setState(() => ({\n        title: '',\n        userId: 0,\n        error: false,\n        completed: false,\n      }));\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  }\n\n  handleStatusTodo = () => {\n    this.setState(state => ({ completed: !state.completed }));\n  }\n\n  handleChangeOnInput = (evt) => {\n    const title = evt.target.value.trim();\n\n    this.setState({\n      title,\n    });\n  }\n\n  handleChangeOnSelect = (evt) => {\n    this.setState({\n      userId: +evt.target.value,\n    });\n  }\n\n  render() {\n    const { error, title, userId, completed } = this.state;\n\n    return (\n      <form className=\"form-todo\" onSubmit={this.validateForm}>\n        <label\n          htmlFor=\"form-input-label\"\n          className=\"form__label\"\n        >\n          Task:\n        </label>\n        <input\n          id=\"form-input-label\"\n          value={this.state.title}\n          placeholder=\"Enter your task\"\n          onChange={this.handleChangeOnInput}\n          className=\"form__input\"\n        />\n\n        <input\n          type=\"checkbox\"\n          id=\"chooseStatus\"\n          className=\"chooseStatus\"\n          checked={completed}\n          onClick={this.handleStatusTodo}\n        />\n\n        <select\n          className=\"form__select\"\n          value={this.state.userId}\n          placeholder=\"Choose a user\"\n          onChange={this.handleChangeOnSelect}\n        >\n          <option value=\"0\">Choose a user</option>\n          {this.props.users.map(user => (\n            <option\n              key={user.phone}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n        <button\n          type=\"submit\"\n          className=\"form__button\"\n        >\n          Add task\n        </button>\n        <div className={error ? 'error--show' : 'error--hide'}>\n          <p\n            className={userId !== 0\n              ? 'error--hide-user'\n              : 'error--show-user'\n            }\n          >\n            Choose user\n          </p>\n          <p\n            className={\n              title.length !== 0\n                ? 'error--hide-title'\n                : 'errors--show-title'\n            }\n          >\n            Enter the title\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape({\n    phone: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ item: { title, completed, id, userId } }) => (\n  <>\n    <p className=\"todo-list__cell\">{id}</p>\n    <p className=\"todo-list__cell\">{title}</p>\n    <p className=\"todo-list__cell\">{completed ? 'Completed' : 'Not yet'}</p>\n    <p className=\"todo-list__cell\">{userId}</p>\n  </>\n);\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos }) => (\n  <div className=\"todo-list\">\n    <span className=\"todo-list__cell\">#</span>\n    <span className=\"todo-list__cell\">Todo</span>\n    <span className=\"todo-list__cell\">Status</span>\n    <span className=\"todo-list__cell\">User Id</span>\n    <>\n      {todos.map(todo => <Todo key={todo.id} item={todo} />)}\n    </>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport todos from './api/todos';\nimport users from './api/users';\nimport NewTodo from './components/NewTodo';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todosFromServer: todos,\n    usersFromServer: users,\n    id: 1,\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todosFromServer: [\n        ...prevState.todosFromServer,\n        {\n          ...todo,\n          id: prevState.id,\n        },\n      ],\n      id: prevState.id + 1,\n    }));\n  }\n\n  render() {\n    const { todosFromServer, usersFromServer } = this.state;\n\n    return (\n      <div className=\"App\">\n        <NewTodo addTodo={this.addTodo} users={usersFromServer} />\n        <TodoList todos={todosFromServer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}